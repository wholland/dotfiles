# set -g default-shell $SHELL 
# set -g default-command "reattach-to-user-namespace -l ${SHELL}"
# set -g default-terminal "screen-256color"
set-option -g allow-rename off 

setw -g mode-keys vi
# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
# bind-key -t vi-copy MouseDragEnd1Pane copy-pipe "reattach-to-user-namespace pbcopy"
# bind-key -t emacs-copy MouseDragEnd1Pane copy-pipe "reattach-to-user-namespace pbcopy"
# if -b 'which -s reattach-to-user-namespace' 'bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"'

is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

set -sg escape-time 10
set -g mouse on
set -g status on

#### COLOUR (Solarized dark)

# default statusbar colors
# set-option -g status-bg black #base02
# set-option -g status-fg yellow #yellow
# set-option -g status-attr default

# default window title colors
# set-window-option -g window-status-fg brightblue #base0
# set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
# set-window-option -g window-status-current-fg brightred #orange
# set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
# set-option -g pane-border-fg black #base02
# set-option -g pane-active-border-fg brightgreen #base01

# message text
# set-option -g message-bg black #base02
# set-option -g message-fg brightred #orange

# pane number display
# set-option -g display-panes-active-colour blue #blue
# set-option -g display-panes-colour brightred #orange

# clock
# set-window-option -g clock-mode-colour green #green

# =================================
# Some dwm inspired pane management
# =================================

# Create new pane
# bind -n M-w split-window -t :.0 \;\
#         swap-pane -s :.0 -t :.1 \;\
#         select-layout main-vertical \;\
#         run "tmux resize-pane -t :.0 -x \"$(echo \"#{window_width}/2/1\" | bc)\""

# Create new pane in current directory
# bind -n M-n split-window -t :.0 -c "#{pane_current_path}" \;\
#         swap-pane -s :.0 -t :.1 \;\
#         select-layout main-vertical \;\
#         run "tmux resize-pane -t :.0 -x \"$(echo \"#{window_width}/2/1\" | bc)\""

# Kill pane
# bind -n M-c kill-pane -t :. \;\
#         select-layout main-vertical \;\
#         run "tmux resize-pane -t :.0 -x \"$(echo \"#{window_width}/2/1\" | bc)\"" \;\
#         select-pane -t :.+

# Next pane
# bind -n M-j select-pane -t :.+

# Prev pane
# bind -n M-k select-pane -t :.-

# Rotate counterclockwise
# bind -n M-, rotate-window -U \; select-pane -t 0

# Rotate clockwise
# bind -n M-. rotate-window -D \; select-pane -t 0

# Focus selected pane
# bind -n M-Space swap-pane -s :. -t :.0 \; select-pane -t :.0

# Refresh layout
# bind -n M-r select-layout main-vertical \;\
        # run "tmux resize-pane -t :.0 -x \"$(echo \"#{window_width}/2/1\" | bc)\""
